"""
列表的4种运用方法：增 / 删 / 改 / 查
"""

#-------------------------------------------------------#
"""
增：
1. append()函数： 在列表的末尾添加一个指定的元素，但一次只能添加一个元素
2. extend()函数： 在列表的末尾添加一个可迭代对象，意思是可以添加一个列表，或者range()
3. 可以直接在列表下标处赋值
4. insert(__ , __)函数： 在列表任意位置添加数据
"""
# append()
heros = ["钢铁侠", "绿巨人"]
heros.append("黑寡妇")
print(heros)    # ['钢铁侠', '绿巨人', '黑寡妇']

# extend()
heros.extend(["鹰眼", "灭霸", "雷神"])
print(heros)    # ['钢铁侠', '绿巨人', '黑寡妇', '鹰眼', '灭霸', '雷神']

# 下标赋值法
s = [1,2,3,4,5,6]
s[len(s) : ] = [7]    # [1, 2, 3, 4, 5, 6, 7] 指的是从第6位到末尾这一段列表赋值[7]这个列表
print(s)              # 这个和s.append()一个效果

v = ["1", "2", "3", "4"]
v[len(v) : ] = ["5", "6", "7"]    # ['1', '2', '3', '4', '5', '6', '7'] 指的是后面赋值一个列表
print(v)                          # 这个和v.extend()一个效果

# insert(__ , __)   第一个参数是插入位置，第二个参数是插入数据
s = [1, 2, 3, 4]
s.insert(1, 78)     # [1, 78, 2, 3, 4]
print(s)            # 注意，插入后在插入点后面的数据下标已经变化

#-------------------------------------------------------#
"""
删：
1. remove()： 删除指定元素，如果有多个相同的元素，那么只会删除那个下标最小的元素，如果元素不存在那么会报错
2. pop()： 删除某个下标的元素
3. clear()： 删除整个列表
"""
# remove()
heros = ['钢铁侠', '绿巨人', '黑寡妇', '鹰眼', '灭霸', '雷神']
heros.remove("灭霸")
print(heros)       # ['钢铁侠', '绿巨人', '黑寡妇', '鹰眼', '雷神']

# pop()
heros = ['钢铁侠', '绿巨人', '黑寡妇', '鹰眼', '灭霸', '雷神']
heros.pop(2)       # 删除 "黑寡妇"
print(heros)       # ['钢铁侠', '绿巨人', '鹰眼', '灭霸', '雷神']

# clear()
heros.clear()
print(heros)       # []   成了一个空列表