"""
列表加法和乘法
加法：拼接
乘法：重复列表若干次
"""

# 加法
s = [1,2,3]
t = [4,5,6]
print(s + t)    # [1, 2, 3, 4, 5, 6]

# 乘法
print(s * 3)    # [1, 2, 3, 1, 2, 3, 1, 2, 3]

"""
嵌套列表（二维列表）
"""
# 二维列表的写法，两种打印出来一样
matrix_1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
matrix_2 = [[1, 2, 3],
            [4, 5, 6],
            [7, 8, 9]]
print(matrix_2)     # [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# 如何访问嵌套列表呢？当然使用的是嵌套循环了
for i in matrix_1:                        # 打印出来为标准矩阵
    for each in i:                        # 1 2 3
        print(each, end = ' ')            # 4 5 6
    print()                               # 7 8 9

# 原理
print(matrix_1[0])      # [1, 2, 3]   打印出来是第一组列表
print(matrix_1[0][2])   # 3   要想访问单个元素，需要两次下标索引。比如这个是第1行第3列，对应下标索引是[0][2]，即[1-1][3-1]

# ✔创建二位列表并初始化
A = [0] * 3             # → A = [0, 0, 0] 先初始化3个大元素
for i in range(3):
    A[i] = [0] * 3      # 每个大元素里面赋值[0, 0, 0]
print(A)                # → A = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

# ❌二维列表错误创建
B = [[0, 0, 0]] * 3
print(B)                # [[0, 0, 0], [0, 0, 0], [0, 0, 0]] 
# 看似和A一样，实际上是对同一个列表的重复，本质和A不同

# 修改A
A[2][2] = 3
print(A)         # [[0, 0, 0], [0, 0, 0], [0, 0, 3]]
#修改B
B[2][2] = 3
print(B)         # [[0, 0, 3], [0, 0, 3], [0, 0, 3]]

# 同源就不好了
